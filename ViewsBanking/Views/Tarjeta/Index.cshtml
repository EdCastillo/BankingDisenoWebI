@model IEnumerable<ViewsBanking.Models.Tarjeta>

@{
    ViewBag.Title = "Index";
    //AGREGAR COOKIES
    #region CookiesConfiguration_1.0
    //Cookies Configuration 1.0 (Configurado para Banking del 4.0 de TV)
    ViewsBanking.Models.UserCookie user = new ViewsBanking.Models.UserCookie();
    CreateOrValidate();
    void CreateOrValidate()
    {
        HttpCookie comp = Request.Cookies["UserCookie"];
        if (comp == null)
        {
            //Crear cookies si no existen
            HttpCookie UserCookie = new HttpCookie("UserCookie");
            UserCookie["ID"] = "0";
            UserCookie["Nombre"] = "Invitado";
            UserCookie["APIToken"] = "NotValid";
            UserCookie.Expires.AddHours(5);
            Response.Cookies.Add(UserCookie);

            //cargar cookies existentes
            HttpCookie reqCookies = Request.Cookies["UserCookie"];
            user = new ViewsBanking.Models.UserCookie();
            user.Nombre = reqCookies["Nombre"].ToString();
            user.ID = Int32.Parse(reqCookies["ID"].ToString());
            user.APIToken = reqCookies["APIToken"].ToString();

        }
        else
        {
            //cargar cookies existentes
            HttpCookie reqCookies = Request.Cookies["UserCookie"];
            user = new ViewsBanking.Models.UserCookie();
            user.Nombre = reqCookies["Nombre"].ToString();
            user.ID = Int32.Parse(reqCookies["ID"].ToString());
            user.APIToken = reqCookies["APIToken"].ToString();

        }
    }
    #endregion
    
    Random random = new Random();
}
<head>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.22/pdfmake.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/0.4.1/html2canvas.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>



    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
    <script type="text/javascript" src="https://cdn.datatables.net/1.10.12/js/jquery.dataTables.min.js"></script>
    <script type="text/javascript" src="https://cdn.datatables.net/buttons/1.2.2/js/dataTables.buttons.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jszip/2.5.0/jszip.min.js"></script>
    <script type="text/javascript" src="https://cdn.rawgit.com/bpampuch/pdfmake/0.1.18/build/pdfmake.min.js"></script>
    <script type="text/javascript" src="https://cdn.rawgit.com/bpampuch/pdfmake/0.1.18/build/vfs_fonts.js"></script>
    <script type="text/javascript" src="https://cdn.datatables.net/buttons/1.2.2/js/buttons.html5.min.js"></script>

    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">

</head>





<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table" id="tab">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Codigo)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.NumeroTarjeta)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CodigoCuenta)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FechaEmision)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FechaExpiracion)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CVC)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Tipo)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Codigo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NumeroTarjeta)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CodigoCuenta)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FechaEmision)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FechaExpiracion)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CVC)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Tipo)
            </td>
            <td>
                @{
                    //CAMBIAR A ESTE BLOQUE DE CODIGO
                    @Html.ActionLink("Edit", "Edit", new { id = item.Codigo, token = user.APIToken })
                    @Html.ActionLink("Details", "Details", new { id = item.Codigo, token = user.APIToken })
                    @Html.ActionLink("Delete", "Delete", new { id = item.Codigo, token = user.APIToken })
                }
            </td>
        </tr>
    }

</table>
    <script type="text/javascript">
    $(document).ready(function () {
        $('[id*=tab]').prepend($("<thead></thead>").append($(this).find("tr:first"))).DataTable({
            dom: 'Bfrtip',
            'aoColumnDefs': [{ 'bSortable': false, 'aTargets': [0] }],
            'iDisplayLength': 5,
            buttons: [
                { extend: 'copy', text: 'Copy to clipboard', className: 'exportExcel btn btn-primary', exportOptions: { modifier: { page: 'all' } } },
                { extend: 'excel', text: 'Export to Excel', className: 'exportExcel  btn btn-primary', filename: 'Errores_Excel', exportOptions: { modifier: { page: 'all' } } },
                { extend: 'csv', text: 'Export to CSV', className: 'exportExcel  btn btn-primary', filename: 'Errores_Csv', exportOptions: { modifier: { page: 'all' } } },
                { extend: 'pdf', text: 'Export to PDF', className: 'exportExcel  btn btn-primary', filename: 'Errores_Pdf', orientation: 'landscape', pageSize: 'LEGAL', exportOptions: { modifier: { page: 'all' }, columns: ':visible' } }
            ]
        });
    });
</script>
     <canvas id="myChart" width="400" height="400"></canvas>
     <script>
    let strings = [];
    let values = [];
    @foreach (var i in Model.GroupBy(info=>info.Tipo).Select(group=>new {Tipo=group.Key,Cantidad=group.Count() })) {
    <text>
    strings.push("@i.Tipo");
    values.push(@i.Cantidad);
    </text>
    }
    let rgbasCONT = [];
    let rgbasBORDER = [];
    @foreach (var i in Model) {
        int r = random.Next(0, 255);
        int g = random.Next(0, 255);
        int b = random.Next(0, 255);
        <text>
    rgbasCONT.push("rgba(@r,@g,@b,0.2)");
    rgbasBORDER.push("rgba(@r,@g,@b,1)");
        </text>
    }
        var ctx = document.getElementById('myChart').getContext('2d');
        var myChart = new Chart(ctx, {
        type: 'bar',
        data: {
        labels: strings,
            datasets: [{
                label: 'Cantidad de tipo de tarjetas',
                data: values,
                backgroundColor: rgbasCONT,
                borderColor: rgbasBORDER,
                borderWidth: 1
            }]
        },
        options: {
        scales: {
            y: {
                beginAtZero: true
                }
            }
        }
    });
     </script>

     <style>
         .dataTables_empty {
             background-color: rgb(56,60,68)
         }
     </style>
