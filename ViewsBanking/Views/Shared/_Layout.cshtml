<html lang="en">
<head>
    @Scripts.Render("~/bundles/jquery")
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
</head>

@RenderSection("scripts", required: false)
<body class="text-white bg-dark">
    @{
        #region CookiesConfiguration_1.0
        //Cookies Configuration 1.0 (Configurado para Banking del 4.0 de TV)
        ViewsBanking.Models.UserCookie user = new ViewsBanking.Models.UserCookie();
        CreateOrValidate();
        void CreateOrValidate()
        {
            HttpCookie comp = Request.Cookies["UserCookie"];
            if (comp == null)
            {
                //Crear cookies si no existen
                HttpCookie UserCookie = new HttpCookie("UserCookie");
                UserCookie["ID"] = "0";
                UserCookie["Nombre"] = "Invitado";
                UserCookie["APIToken"] = "NotValid";
                UserCookie.Expires.AddHours(5);
                Response.Cookies.Add(UserCookie);

                //cargar cookies existentes
                HttpCookie reqCookies = Request.Cookies["UserCookie"];
                user = new ViewsBanking.Models.UserCookie();
                user.Nombre = reqCookies["Nombre"].ToString();
                user.ID = Int32.Parse(reqCookies["ID"].ToString());
                user.APIToken = reqCookies["APIToken"].ToString();

            }
            else
            {
                //cargar cookies existentes
                HttpCookie reqCookies = Request.Cookies["UserCookie"];
                user = new ViewsBanking.Models.UserCookie();
                user.Nombre = reqCookies["Nombre"].ToString();
                user.ID = Int32.Parse(reqCookies["ID"].ToString());
                user.APIToken = reqCookies["APIToken"].ToString();

            }
        }
        #endregion
    }


    <style>
        th {
            color: white
        }

        td {
            color: white
        }

        .btn-default {
            background-color: white;
        }
    </style>
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <a class="navbar-brand" href="/moneda?token=@user.APIToken">Moneda</a>
            <a class="navbar-brand" href="/sinpe?token=@user.APIToken">Sinpe</a>
            <a class="navbar-brand" href="/sobre?token=@user.APIToken">Sobre</a>
            <a class="navbar-brand" href="/pago?token=@user.APIToken">Pago</a>
            <a class="navbar-brand" href="/sesion?token=@user.APIToken">Sesion</a>
            <a class="navbar-brand" href="/transferencia?token=@user.APIToken">Transferencia</a>
            <a class="navbar-brand" href="/abono?token=@user.APIToken">Abono</a>
            <a class="navbar-brand" href="/tipo">Tipo</a>
            <a class="navbar-brand" href="/punto?token=@user.APIToken">Punto</a>
            <a class="navbar-brand" href="/proveedor?token=@user.APIToken">Proveedor</a>
            <a class="navbar-brand" href="/seguridad?token=@user.APIToken">Seguridad</a>
            <a class="navbar-brand" href="/prestamo?token=@user.APIToken">Prestamo</a>
            <a class="navbar-brand" href="/tarjeta?token=@user.APIToken">Tarjeta</a>
            <a class="navbar-brand" href="/categoria?token=@user.APIToken">Categoria</a>
        </div>
    </div>
    <div class="container body-content">
        @RenderBody()
        <hr />
        <footer>
            <p>&copy; @DateTime.Now.Year - Banking</p>
        </footer>
    </div>
    
</body>
</html>